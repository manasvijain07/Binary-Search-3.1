Solution 1 - Linear Search (h > h citiations and (n - h) < h citations)
// TC - O(n)
// SC - O(1)

class Solution {
    public int hIndex(int[] citations) {
        int k = 0;
        for(int i = citations.length; i > 0; i--)
        {
            if(citations[k] >= i)
                return i;
            k++;
        }
        return 0;
    }
}

Solution 2 - Binary Search
// TC - O(log n)
// SC - O(1)

class Solution {
    public int hIndex(int[] citations) {
        int n = citations.length;
        
        if(n == 0 || citations == null)
            return 0;
        
        int low = 0, high = n - 1;
        
        while(low <= high)
        {
            int mid = low + (high - low)/2;
            int diff = n - mid;
            if(diff == citations[mid])
                return diff;
            else if(diff > citations[mid])
            {
                low = mid + 1;
            }
            else
            {
                high = mid - 1;
            }
        }
        return n - low;
    }
}
